{{ 'section-recipe-post.css' | asset_url | stylesheet_tag }}

<article class="article-template section--main" itemscope itemtype="http://schema.org/BlogPosting">
  <div class="page-width is-small ">
    <div class="recipe-header master-padding-top">
      <div class="recipe-header__inner ">
        <h1 class="recipe-header__subline">
          {{ article.title }}
        </h1>
        <p class="recipe-header__heading">Recipe</p>
      </div>
    </div>
    <div class="recipe-body">
      <div class="recipe-images">
        <scroll-opacity-images>
          <div class="recipe-images__inner">
            {{ article.content }}
          </div>
        </scroll-opacity-images>
      </div>
      <div class="recipe-information">
        <div class="recipe-information__inner">
          <recipe-information-toggle>
            <button class="recipe-information__toggle" aria-label="Slide up information panel">
              <span>Slide Up</span>
            </button>
          </recipe-information-toggle>

          <div class="recipe-information__header">
            <p class="recipe-information__name">{{ article.title }}</p>
            <p class="recipe-information__description">
              {{ article.excerpt }}
            </p>
          </div>
          <div class="recipe-information__section">
            <h2 class="recipe-information__section__heading">Ingredients:</h2>
            <div class="recipe-information__section__body  ingredients-list">
              {{ article.metafields.recipe_details.ingredients | metafield_tag }}
            </div>
          </div>
          <div class="recipe-information__section">
            <h2 class="recipe-information__section__heading">Ingredients:</h2>
            <div class="recipe-information__section__body  instructions-list">
              {{ article.metafields.recipe_details.instructions | metafield_tag }}
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</article>

<!-- Include GSAP 3 from the Shopify CDN -->
<script defer type="module">
  // Define the custom element
  class RecipeInformationToggle extends HTMLElement {
    constructor() {
      super();

      // Create a button element inside the shadow DOM
      const button = this.querySelector('button');

      // Attach a click event listener to the button
      button.addEventListener('click', () => {
        // Find the parent element with the class ".recipe-information"
        const recipeInfo = this.closest('.recipe-information');

        // Toggle a CSS class on the parent element
        if (recipeInfo) {
          recipeInfo.classList.toggle('is-active');
        }
      });
    }
  }

  // Define the custom element's tag name
  customElements.define('recipe-information-toggle', RecipeInformationToggle);
  class ScrollOpacityImages extends HTMLElement {
    constructor() {
      super();
      this.images = this.querySelectorAll('img');
    }
    connectedCallback() {
      this.setUpDOM();
      this.setUpImagesAnimation();
    }

    setUpDOM() {
      function wrap(el, wrapper) {
        el.parentNode.insertBefore(wrapper, el);
        wrapper.appendChild(el);
      }

      this.images.forEach((image, index) => {
        image.style.webkitFilter = 'blur(10px)';
        image.style.opacity = 0;
        const wrapper = document.createElement('div');
        wrapper.classList.add('recipes-images__image');
        wrap(image, wrapper);
      });
    }
    setUpImagesAnimation() {
      let container = this;

      loadScript('https://cdn.shopify.com/s/files/1/0638/6201/4197/files/gsap.min.js?v=1694471182')
        .then(() => {
          loadScript('https://cdn.shopify.com/s/files/1/0638/6201/4197/files/ScrollTrigger.min.js?v=1694471189"').then(
            () => {
              gsap.registerPlugin('ScrollTrigger');

              gsap.to(this.querySelectorAll('img'), {
                webkitFilter: 'blur(0px)',
                opacity: 1,
                ease: 'none',
                stagger: 0.2,
                scrollTrigger: {
                  trigger: container,
                  scrub: true,
                  reverse: true,
                  start: '-=92%  top',
                  end: 'bottom bottom',
                  toggleActions: 'restart',
                },
              });
            }
          );
        })
        .catch(() => {
          console.error('Script loading failed! Handle this error');
        });
    }
  }

  customElements.define('scroll-opacity-images', ScrollOpacityImages);
</script>

{% schema %}
{
  "name": "Recipe Post",
  "settings": [],
  "blocks": [
    {
      "type": "images",
      "name": "Image Block",
      "settings": []
    }
  ]
}
{% endschema %}
