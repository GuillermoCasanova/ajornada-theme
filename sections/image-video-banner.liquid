{{ 'section-image-video-banner.css' | asset_url | stylesheet_tag }}

<image-video-banner id="Banner-{{ section.id }}" class="image-banner">
  <a href="{{ section.settings.cta-url }}" data-banner-media>
    <div class="image-banner__media">
      {% if section.settings.image != blank %}
        <img
          srcset="
            {%- if section.settings.image.width >= 375 -%}{{ section.settings.image | image_url: width: 375 }} 375w,{%- endif -%}
            {%- if section.settings.image.width >= 750 -%}{{ section.settings.image | image_url: width: 750 }} 750w,{%- endif -%}
            {%- if section.settings.image.width >= 1100 -%}{{ section.settings.image | image_url: width: 1100 }} 1100w,{%- endif -%}
            {%- if section.settings.image.width >= 1500 -%}{{ section.settings.image | image_url: width: 1500 }} 1500w,{%- endif -%}
            {%- if section.settings.image.width >= 1780 -%}{{ section.settings.image | image_url: width: 1780 }} 1780w,{%- endif -%}
            {%- if section.settings.image.width >= 2000 -%}{{ section.settings.image | image_url: width: 2000 }} 2000w,{%- endif -%}
            {%- if section.settings.image.width >= 2800 -%}{{ section.settings.image | image_url: width: 2800 }} 2800w{%- endif -%}
          "
          sizes="{% if section.settings.image_2 != blank and section.settings.stack_images_on_mobile %}(min-width: 750px) 50vw, 100vw{% elsif section.settings.image_2 != blank %}50vw{% else %}100vw{% endif %}"
          src="{{ section.settings.image | image_url: width: 750 }}"
          loading="eager"
          alt="{{ section.settings.image.alt | escape }}"
          width="{{ section.settings.image.width }}"
          height="{{ section.settings.image.width | divided_by: section.settings.image.aspect_ratio }}"
          class="image-banner__media__image  image-banner__media__image--mobile"
        >
      {% else %}
        <video
          data-lazy-src="{{ section.settings.video }}"
          id="hero-video"
          width="100%"
          allowfullscreen="true"
          muted="muted"
          autoplay
          loop
          muted
          playsinline
          playsinline="playsinline"
          loop="loop"
          class="image-banner__media__image"
        >
          <source src="" type="video/mp4">
        </video>
      {% endif %}
    </div>
  </a>
</image-video-banner>

<script defer>
  class ImageVideoBanner extends HTMLElement {
    constructor() {
      super();
      this.initCursorEffect();
      if (this.querySelector('video')) {
        this.initVideo();
      }
    }

    initVideo() {
      window.addEventListener('DOMContentLoaded', function () {
        let mediaQueries = {
          mediumDown: window.matchMedia('(max-width: 974px)'),
          largeUp: window.matchMedia('(min-width: 975px)'),
        };

        let vidSrc = document.querySelector('#hero-video').dataset.lazySrc;

        function startVideo(pSource) {
          document.querySelector('#hero-video').querySelector('[type="video/mp4"]').src = pSource;
          document.querySelector('#hero-video').load();

          setTimeout(function () {
            document.querySelector('#hero-video').classList.add('is-loaded');
            document.querySelector('#hero-video').play();
          }, 500);
        }

        startVideo(vidSrc);
      });
    }

    initCursorEffect() {
      function setCursorToSVG(elementId, svgCode, pContainer) {
        const element = pContainer.querySelector('[data-banner-media]');

        if (element) {
          element.style.cursor = `url("data:image/svg+xml,${encodeURIComponent(svgCode)}"), auto`;
        } else {
          console.error(`Element with ID '${elementId}' not found.`);
        }
      }

      // SVG code for the cursor
      const customCursorSVG = `
            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="111" fill="none"><path fill="#fff" d="M7.293 110.707a1 1 0 0 0 1.414 0l6.364-6.364a1 1 0 1 0-1.414-1.414L8 108.586l-5.657-5.657a1 1 0 1 0-1.414 1.414l6.364 6.364ZM7 0v110h2V0H7Z"/></svg>
          `;

      // Add event listener to the target element
      const targetElement = this.querySelector('[data-banner-media]');

      if (targetElement) {
        targetElement.addEventListener('mouseenter', () => {
          setCursorToSVG('targetElement', customCursorSVG, this);
        });

        targetElement.addEventListener('mouseleave', () => {
          targetElement.style.cursor = 'auto';
        });
      } else {
        console.error('Target element not found.');
      }
    }
  }

  customElements.define('image-video-banner', ImageVideoBanner);
</script>

{% schema %}
{
  "name": "t:sections.image-banner.name",
  "tag": "section",
  "class": "spaced-section spaced-section--full-width image-banner-container",
  "templates": ["page", "index", "blog"],
  "settings": [
    {
      "type": "image_picker",
      "id": "image",
      "label": "Background Image"
    },
    {
      "type": "text",
      "id": "video",
      "label": "Background Video"
    },
    {
      "type": "url",
      "id": "cta-url",
      "label": "CTA Url"
    }
  ],
  "blocks": [
    {
      "type": "heading",
      "name": "t:sections.image-banner.blocks.heading.name",
      "limit": 1,
      "settings": [
        {
          "type": "text",
          "id": "heading",
          "default": "Image banner",
          "label": "t:sections.image-banner.blocks.heading.settings.heading.label"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "t:sections.image-banner.presets.name",
      "blocks": [
        {
          "type": "heading"
        }
      ]
    }
  ]
}
{% endschema %}
